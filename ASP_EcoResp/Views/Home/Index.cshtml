@model ASP_EcoResp.Models.SearchHomeForm


@{
    ViewData["Title"] = "Index";
}

<h1>Recherche par mot-clé ou par liste déroulante</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form id="searchBar" asp-action="Search" asp-controller="Produit" method="get">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Search" class="control-label"></label>
                <input asp-for="Search" class="form-control" placeholder=" par nom ou catégorie"/>
                <span asp-validation-for="Search" class="text-danger"></span>
            </div>
            @* <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" asp-action="Search" asp-controller="Produit"/>
            </div>

        </form>
    </div>
</div>
<hr>

<h4>Par liste déroulante</h4>
@using (Html.BeginForm("FiltreEcoScore", "Produit", FormMethod.Get))
{
    <div class="row">
            <div class="col-md-4"> *@
            <div id="EcoScore">
                <label asp-for="EcoScore" class="control-label"></label>
                <select asp-for="EcoScore" class="form-control">
                    <option value="">Veuillez choisir un EcoScore</option>
                    @foreach (var ecoscore in Enum.GetValues(typeof(EcoScore)))
                    {
                        <option value="@ecoscore">@ecoscore</option>
                    }
                </select>
            </div>
            @*< /div>
    </div> *@
    <button type="submit" class="btn btn-primary">Filtrer</button>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
